<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
    "-//Hibernate/Hibernate Configuration DTD//EN"
    "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
  <session-factory>
    <!--指定数据库的名称-->
    <property name="hibernate.connection.username">root</property>
    <!--指定数据库的密码-->
    <property name="hibernate.connection.password">qpy1995</property>
    <!--指定JDBC驱动-->
    <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
    <!--访问数据库的地址-->
    <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/hibernate_one_to_many</property>

    <!--是否把Hibernate运行时的SQL语句输出到控制套,编码阶段便于测试-->
    <property name="show_sql">true</property>
    <!--输出到控制台的SQL语句是否进行排版,便于阅读.建议设置为true-->
    <property name="format_sql">false</property>
    <!--可以帮助由Java代码生成的数据库脚本,进而生成具体的表结构。create|update|create-drop|validate-->
    <!-- create指删除原有表，然后重建该表 -->
    <!-- update在原有表上更新，不会删除前面测试所插入的数据 -->
    <!-- create-drop表示先创建后删除 -->
    <!-- validate对原有表结构进行验证，如果现在的表结构与原有表结构不同,则不会创建 -->
    <property name="hbm2ddl.auto">update</property>
    <mapping class="com.discardpast.chapter_two.One_To_Many.persistence.Grade"/>
    <mapping resource="com/discardpast/chapter_two/One_To_Many/persistence/Grade.hbm.xml"/>
    <mapping class="com.discardpast.chapter_two.One_To_Many.persistence.Student"/>
    <mapping resource="com/discardpast/chapter_two/One_To_Many/persistence/Student.hbm.xml"/>
  </session-factory>
</hibernate-configuration>